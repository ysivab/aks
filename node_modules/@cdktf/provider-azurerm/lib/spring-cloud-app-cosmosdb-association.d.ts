import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface SpringCloudAppCosmosdbAssociationConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association#api_type SpringCloudAppCosmosdbAssociation#api_type}
    */
    readonly apiType: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association#cosmosdb_access_key SpringCloudAppCosmosdbAssociation#cosmosdb_access_key}
    */
    readonly cosmosdbAccessKey: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association#cosmosdb_account_id SpringCloudAppCosmosdbAssociation#cosmosdb_account_id}
    */
    readonly cosmosdbAccountId: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association#cosmosdb_cassandra_keyspace_name SpringCloudAppCosmosdbAssociation#cosmosdb_cassandra_keyspace_name}
    */
    readonly cosmosdbCassandraKeyspaceName?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association#cosmosdb_gremlin_database_name SpringCloudAppCosmosdbAssociation#cosmosdb_gremlin_database_name}
    */
    readonly cosmosdbGremlinDatabaseName?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association#cosmosdb_gremlin_graph_name SpringCloudAppCosmosdbAssociation#cosmosdb_gremlin_graph_name}
    */
    readonly cosmosdbGremlinGraphName?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association#cosmosdb_mongo_database_name SpringCloudAppCosmosdbAssociation#cosmosdb_mongo_database_name}
    */
    readonly cosmosdbMongoDatabaseName?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association#cosmosdb_sql_database_name SpringCloudAppCosmosdbAssociation#cosmosdb_sql_database_name}
    */
    readonly cosmosdbSqlDatabaseName?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association#name SpringCloudAppCosmosdbAssociation#name}
    */
    readonly name: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association#spring_cloud_app_id SpringCloudAppCosmosdbAssociation#spring_cloud_app_id}
    */
    readonly springCloudAppId: string;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association#timeouts SpringCloudAppCosmosdbAssociation#timeouts}
    */
    readonly timeouts?: SpringCloudAppCosmosdbAssociationTimeouts;
}
export interface SpringCloudAppCosmosdbAssociationTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association#create SpringCloudAppCosmosdbAssociation#create}
    */
    readonly create?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association#delete SpringCloudAppCosmosdbAssociation#delete}
    */
    readonly delete?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association#read SpringCloudAppCosmosdbAssociation#read}
    */
    readonly read?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association#update SpringCloudAppCosmosdbAssociation#update}
    */
    readonly update?: string;
}
export declare function springCloudAppCosmosdbAssociationTimeoutsToTerraform(struct?: SpringCloudAppCosmosdbAssociationTimeoutsOutputReference | SpringCloudAppCosmosdbAssociationTimeouts | cdktf.IResolvable): any;
export declare class SpringCloudAppCosmosdbAssociationTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param isSingleItem True if this is a block, false if it's a list
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, isSingleItem: boolean);
    get internalValue(): SpringCloudAppCosmosdbAssociationTimeouts | undefined;
    set internalValue(value: SpringCloudAppCosmosdbAssociationTimeouts | undefined);
    private _create?;
    get create(): string;
    set create(value: string);
    resetCreate(): void;
    get createInput(): string | undefined;
    private _delete?;
    get delete(): string;
    set delete(value: string);
    resetDelete(): void;
    get deleteInput(): string | undefined;
    private _read?;
    get read(): string;
    set read(value: string);
    resetRead(): void;
    get readInput(): string | undefined;
    private _update?;
    get update(): string;
    set update(value: string);
    resetUpdate(): void;
    get updateInput(): string | undefined;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association azurerm_spring_cloud_app_cosmosdb_association}
*/
export declare class SpringCloudAppCosmosdbAssociation extends cdktf.TerraformResource {
    static readonly tfResourceType: string;
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/azurerm/r/spring_cloud_app_cosmosdb_association azurerm_spring_cloud_app_cosmosdb_association} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options SpringCloudAppCosmosdbAssociationConfig
    */
    constructor(scope: Construct, id: string, config: SpringCloudAppCosmosdbAssociationConfig);
    private _apiType?;
    get apiType(): string;
    set apiType(value: string);
    get apiTypeInput(): string | undefined;
    private _cosmosdbAccessKey?;
    get cosmosdbAccessKey(): string;
    set cosmosdbAccessKey(value: string);
    get cosmosdbAccessKeyInput(): string | undefined;
    private _cosmosdbAccountId?;
    get cosmosdbAccountId(): string;
    set cosmosdbAccountId(value: string);
    get cosmosdbAccountIdInput(): string | undefined;
    private _cosmosdbCassandraKeyspaceName?;
    get cosmosdbCassandraKeyspaceName(): string;
    set cosmosdbCassandraKeyspaceName(value: string);
    resetCosmosdbCassandraKeyspaceName(): void;
    get cosmosdbCassandraKeyspaceNameInput(): string | undefined;
    private _cosmosdbGremlinDatabaseName?;
    get cosmosdbGremlinDatabaseName(): string;
    set cosmosdbGremlinDatabaseName(value: string);
    resetCosmosdbGremlinDatabaseName(): void;
    get cosmosdbGremlinDatabaseNameInput(): string | undefined;
    private _cosmosdbGremlinGraphName?;
    get cosmosdbGremlinGraphName(): string;
    set cosmosdbGremlinGraphName(value: string);
    resetCosmosdbGremlinGraphName(): void;
    get cosmosdbGremlinGraphNameInput(): string | undefined;
    private _cosmosdbMongoDatabaseName?;
    get cosmosdbMongoDatabaseName(): string;
    set cosmosdbMongoDatabaseName(value: string);
    resetCosmosdbMongoDatabaseName(): void;
    get cosmosdbMongoDatabaseNameInput(): string | undefined;
    private _cosmosdbSqlDatabaseName?;
    get cosmosdbSqlDatabaseName(): string;
    set cosmosdbSqlDatabaseName(value: string);
    resetCosmosdbSqlDatabaseName(): void;
    get cosmosdbSqlDatabaseNameInput(): string | undefined;
    get id(): string;
    private _name?;
    get name(): string;
    set name(value: string);
    get nameInput(): string | undefined;
    private _springCloudAppId?;
    get springCloudAppId(): string;
    set springCloudAppId(value: string);
    get springCloudAppIdInput(): string | undefined;
    private _timeouts;
    get timeouts(): SpringCloudAppCosmosdbAssociationTimeoutsOutputReference;
    putTimeouts(value: SpringCloudAppCosmosdbAssociationTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): SpringCloudAppCosmosdbAssociationTimeouts | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
