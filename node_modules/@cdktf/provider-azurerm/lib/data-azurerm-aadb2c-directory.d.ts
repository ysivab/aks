import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface DataAzurermAadb2CDirectoryConfig extends cdktf.TerraformMetaArguments {
    /**
    * Domain name of the B2C tenant, including onmicrosoft.com suffix.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/d/aadb2c_directory#domain_name DataAzurermAadb2CDirectory#domain_name}
    */
    readonly domainName: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/d/aadb2c_directory#resource_group_name DataAzurermAadb2CDirectory#resource_group_name}
    */
    readonly resourceGroupName: string;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/d/aadb2c_directory#timeouts DataAzurermAadb2CDirectory#timeouts}
    */
    readonly timeouts?: DataAzurermAadb2CDirectoryTimeouts;
}
export interface DataAzurermAadb2CDirectoryTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/d/aadb2c_directory#read DataAzurermAadb2CDirectory#read}
    */
    readonly read?: string;
}
export declare function dataAzurermAadb2CDirectoryTimeoutsToTerraform(struct?: DataAzurermAadb2CDirectoryTimeoutsOutputReference | DataAzurermAadb2CDirectoryTimeouts | cdktf.IResolvable): any;
export declare class DataAzurermAadb2CDirectoryTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param isSingleItem True if this is a block, false if it's a list
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, isSingleItem: boolean);
    get internalValue(): DataAzurermAadb2CDirectoryTimeouts | undefined;
    set internalValue(value: DataAzurermAadb2CDirectoryTimeouts | undefined);
    private _read?;
    get read(): string;
    set read(value: string);
    resetRead(): void;
    get readInput(): string | undefined;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/azurerm/d/aadb2c_directory azurerm_aadb2c_directory}
*/
export declare class DataAzurermAadb2CDirectory extends cdktf.TerraformDataSource {
    static readonly tfResourceType: string;
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/azurerm/d/aadb2c_directory azurerm_aadb2c_directory} Data Source
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options DataAzurermAadb2CDirectoryConfig
    */
    constructor(scope: Construct, id: string, config: DataAzurermAadb2CDirectoryConfig);
    get billingType(): string;
    get dataResidencyLocation(): string;
    private _domainName?;
    get domainName(): string;
    set domainName(value: string);
    get domainNameInput(): string | undefined;
    get effectiveStartDate(): string;
    get id(): string;
    private _resourceGroupName?;
    get resourceGroupName(): string;
    set resourceGroupName(value: string);
    get resourceGroupNameInput(): string | undefined;
    get skuName(): string;
    tags(key: string): string | cdktf.IResolvable;
    get tenantId(): string;
    private _timeouts;
    get timeouts(): DataAzurermAadb2CDirectoryTimeoutsOutputReference;
    putTimeouts(value: DataAzurermAadb2CDirectoryTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): DataAzurermAadb2CDirectoryTimeouts | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
