import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface MediaStreamingEndpointConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#auto_start_enabled MediaStreamingEndpoint#auto_start_enabled}
    */
    readonly autoStartEnabled?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#cdn_enabled MediaStreamingEndpoint#cdn_enabled}
    */
    readonly cdnEnabled?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#cdn_profile MediaStreamingEndpoint#cdn_profile}
    */
    readonly cdnProfile?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#cdn_provider MediaStreamingEndpoint#cdn_provider}
    */
    readonly cdnProvider?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#custom_host_names MediaStreamingEndpoint#custom_host_names}
    */
    readonly customHostNames?: string[];
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#description MediaStreamingEndpoint#description}
    */
    readonly description?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#location MediaStreamingEndpoint#location}
    */
    readonly location: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#max_cache_age_seconds MediaStreamingEndpoint#max_cache_age_seconds}
    */
    readonly maxCacheAgeSeconds?: number;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#media_services_account_name MediaStreamingEndpoint#media_services_account_name}
    */
    readonly mediaServicesAccountName: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#name MediaStreamingEndpoint#name}
    */
    readonly name: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#resource_group_name MediaStreamingEndpoint#resource_group_name}
    */
    readonly resourceGroupName: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#scale_units MediaStreamingEndpoint#scale_units}
    */
    readonly scaleUnits: number;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#tags MediaStreamingEndpoint#tags}
    */
    readonly tags?: {
        [key: string]: string;
    };
    /**
    * access_control block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#access_control MediaStreamingEndpoint#access_control}
    */
    readonly accessControl?: MediaStreamingEndpointAccessControl;
    /**
    * cross_site_access_policy block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#cross_site_access_policy MediaStreamingEndpoint#cross_site_access_policy}
    */
    readonly crossSiteAccessPolicy?: MediaStreamingEndpointCrossSiteAccessPolicy;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#timeouts MediaStreamingEndpoint#timeouts}
    */
    readonly timeouts?: MediaStreamingEndpointTimeouts;
}
export interface MediaStreamingEndpointAccessControlAkamaiSignatureHeaderAuthenticationKey {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#base64_key MediaStreamingEndpoint#base64_key}
    */
    readonly base64Key?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#expiration MediaStreamingEndpoint#expiration}
    */
    readonly expiration?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#identifier MediaStreamingEndpoint#identifier}
    */
    readonly identifier?: string;
}
export declare function mediaStreamingEndpointAccessControlAkamaiSignatureHeaderAuthenticationKeyToTerraform(struct?: MediaStreamingEndpointAccessControlAkamaiSignatureHeaderAuthenticationKey | cdktf.IResolvable): any;
export interface MediaStreamingEndpointAccessControlIpAllow {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#address MediaStreamingEndpoint#address}
    */
    readonly address?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#name MediaStreamingEndpoint#name}
    */
    readonly name?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#subnet_prefix_length MediaStreamingEndpoint#subnet_prefix_length}
    */
    readonly subnetPrefixLength?: number;
}
export declare function mediaStreamingEndpointAccessControlIpAllowToTerraform(struct?: MediaStreamingEndpointAccessControlIpAllow | cdktf.IResolvable): any;
export interface MediaStreamingEndpointAccessControl {
    /**
    * akamai_signature_header_authentication_key block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#akamai_signature_header_authentication_key MediaStreamingEndpoint#akamai_signature_header_authentication_key}
    */
    readonly akamaiSignatureHeaderAuthenticationKey?: MediaStreamingEndpointAccessControlAkamaiSignatureHeaderAuthenticationKey[] | cdktf.IResolvable;
    /**
    * ip_allow block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#ip_allow MediaStreamingEndpoint#ip_allow}
    */
    readonly ipAllow?: MediaStreamingEndpointAccessControlIpAllow[] | cdktf.IResolvable;
}
export declare function mediaStreamingEndpointAccessControlToTerraform(struct?: MediaStreamingEndpointAccessControlOutputReference | MediaStreamingEndpointAccessControl): any;
export declare class MediaStreamingEndpointAccessControlOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param isSingleItem True if this is a block, false if it's a list
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, isSingleItem: boolean);
    get internalValue(): MediaStreamingEndpointAccessControl | undefined;
    set internalValue(value: MediaStreamingEndpointAccessControl | undefined);
    private _akamaiSignatureHeaderAuthenticationKey?;
    get akamaiSignatureHeaderAuthenticationKey(): MediaStreamingEndpointAccessControlAkamaiSignatureHeaderAuthenticationKey[] | cdktf.IResolvable;
    set akamaiSignatureHeaderAuthenticationKey(value: MediaStreamingEndpointAccessControlAkamaiSignatureHeaderAuthenticationKey[] | cdktf.IResolvable);
    resetAkamaiSignatureHeaderAuthenticationKey(): void;
    get akamaiSignatureHeaderAuthenticationKeyInput(): cdktf.IResolvable | MediaStreamingEndpointAccessControlAkamaiSignatureHeaderAuthenticationKey[] | undefined;
    private _ipAllow?;
    get ipAllow(): MediaStreamingEndpointAccessControlIpAllow[] | cdktf.IResolvable;
    set ipAllow(value: MediaStreamingEndpointAccessControlIpAllow[] | cdktf.IResolvable);
    resetIpAllow(): void;
    get ipAllowInput(): cdktf.IResolvable | MediaStreamingEndpointAccessControlIpAllow[] | undefined;
}
export interface MediaStreamingEndpointCrossSiteAccessPolicy {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#client_access_policy MediaStreamingEndpoint#client_access_policy}
    */
    readonly clientAccessPolicy?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#cross_domain_policy MediaStreamingEndpoint#cross_domain_policy}
    */
    readonly crossDomainPolicy?: string;
}
export declare function mediaStreamingEndpointCrossSiteAccessPolicyToTerraform(struct?: MediaStreamingEndpointCrossSiteAccessPolicyOutputReference | MediaStreamingEndpointCrossSiteAccessPolicy): any;
export declare class MediaStreamingEndpointCrossSiteAccessPolicyOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param isSingleItem True if this is a block, false if it's a list
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, isSingleItem: boolean);
    get internalValue(): MediaStreamingEndpointCrossSiteAccessPolicy | undefined;
    set internalValue(value: MediaStreamingEndpointCrossSiteAccessPolicy | undefined);
    private _clientAccessPolicy?;
    get clientAccessPolicy(): string;
    set clientAccessPolicy(value: string);
    resetClientAccessPolicy(): void;
    get clientAccessPolicyInput(): string | undefined;
    private _crossDomainPolicy?;
    get crossDomainPolicy(): string;
    set crossDomainPolicy(value: string);
    resetCrossDomainPolicy(): void;
    get crossDomainPolicyInput(): string | undefined;
}
export interface MediaStreamingEndpointTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#create MediaStreamingEndpoint#create}
    */
    readonly create?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#delete MediaStreamingEndpoint#delete}
    */
    readonly delete?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#read MediaStreamingEndpoint#read}
    */
    readonly read?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint#update MediaStreamingEndpoint#update}
    */
    readonly update?: string;
}
export declare function mediaStreamingEndpointTimeoutsToTerraform(struct?: MediaStreamingEndpointTimeoutsOutputReference | MediaStreamingEndpointTimeouts | cdktf.IResolvable): any;
export declare class MediaStreamingEndpointTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param isSingleItem True if this is a block, false if it's a list
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, isSingleItem: boolean);
    get internalValue(): MediaStreamingEndpointTimeouts | undefined;
    set internalValue(value: MediaStreamingEndpointTimeouts | undefined);
    private _create?;
    get create(): string;
    set create(value: string);
    resetCreate(): void;
    get createInput(): string | undefined;
    private _delete?;
    get delete(): string;
    set delete(value: string);
    resetDelete(): void;
    get deleteInput(): string | undefined;
    private _read?;
    get read(): string;
    set read(value: string);
    resetRead(): void;
    get readInput(): string | undefined;
    private _update?;
    get update(): string;
    set update(value: string);
    resetUpdate(): void;
    get updateInput(): string | undefined;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint azurerm_media_streaming_endpoint}
*/
export declare class MediaStreamingEndpoint extends cdktf.TerraformResource {
    static readonly tfResourceType: string;
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/azurerm/r/media_streaming_endpoint azurerm_media_streaming_endpoint} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options MediaStreamingEndpointConfig
    */
    constructor(scope: Construct, id: string, config: MediaStreamingEndpointConfig);
    private _autoStartEnabled?;
    get autoStartEnabled(): boolean | cdktf.IResolvable;
    set autoStartEnabled(value: boolean | cdktf.IResolvable);
    resetAutoStartEnabled(): void;
    get autoStartEnabledInput(): boolean | cdktf.IResolvable | undefined;
    private _cdnEnabled?;
    get cdnEnabled(): boolean | cdktf.IResolvable;
    set cdnEnabled(value: boolean | cdktf.IResolvable);
    resetCdnEnabled(): void;
    get cdnEnabledInput(): boolean | cdktf.IResolvable | undefined;
    private _cdnProfile?;
    get cdnProfile(): string;
    set cdnProfile(value: string);
    resetCdnProfile(): void;
    get cdnProfileInput(): string | undefined;
    private _cdnProvider?;
    get cdnProvider(): string;
    set cdnProvider(value: string);
    resetCdnProvider(): void;
    get cdnProviderInput(): string | undefined;
    private _customHostNames?;
    get customHostNames(): string[];
    set customHostNames(value: string[]);
    resetCustomHostNames(): void;
    get customHostNamesInput(): string[] | undefined;
    private _description?;
    get description(): string;
    set description(value: string);
    resetDescription(): void;
    get descriptionInput(): string | undefined;
    get hostName(): string;
    get id(): string;
    private _location?;
    get location(): string;
    set location(value: string);
    get locationInput(): string | undefined;
    private _maxCacheAgeSeconds?;
    get maxCacheAgeSeconds(): number;
    set maxCacheAgeSeconds(value: number);
    resetMaxCacheAgeSeconds(): void;
    get maxCacheAgeSecondsInput(): number | undefined;
    private _mediaServicesAccountName?;
    get mediaServicesAccountName(): string;
    set mediaServicesAccountName(value: string);
    get mediaServicesAccountNameInput(): string | undefined;
    private _name?;
    get name(): string;
    set name(value: string);
    get nameInput(): string | undefined;
    private _resourceGroupName?;
    get resourceGroupName(): string;
    set resourceGroupName(value: string);
    get resourceGroupNameInput(): string | undefined;
    private _scaleUnits?;
    get scaleUnits(): number;
    set scaleUnits(value: number);
    get scaleUnitsInput(): number | undefined;
    private _tags?;
    get tags(): {
        [key: string]: string;
    };
    set tags(value: {
        [key: string]: string;
    });
    resetTags(): void;
    get tagsInput(): {
        [key: string]: string;
    } | undefined;
    private _accessControl;
    get accessControl(): MediaStreamingEndpointAccessControlOutputReference;
    putAccessControl(value: MediaStreamingEndpointAccessControl): void;
    resetAccessControl(): void;
    get accessControlInput(): MediaStreamingEndpointAccessControl | undefined;
    private _crossSiteAccessPolicy;
    get crossSiteAccessPolicy(): MediaStreamingEndpointCrossSiteAccessPolicyOutputReference;
    putCrossSiteAccessPolicy(value: MediaStreamingEndpointCrossSiteAccessPolicy): void;
    resetCrossSiteAccessPolicy(): void;
    get crossSiteAccessPolicyInput(): MediaStreamingEndpointCrossSiteAccessPolicy | undefined;
    private _timeouts;
    get timeouts(): MediaStreamingEndpointTimeoutsOutputReference;
    putTimeouts(value: MediaStreamingEndpointTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): MediaStreamingEndpointTimeouts | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
