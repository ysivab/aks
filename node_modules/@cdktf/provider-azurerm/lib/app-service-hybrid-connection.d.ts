import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface AppServiceHybridConnectionConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/app_service_hybrid_connection#app_service_name AppServiceHybridConnection#app_service_name}
    */
    readonly appServiceName: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/app_service_hybrid_connection#hostname AppServiceHybridConnection#hostname}
    */
    readonly hostname: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/app_service_hybrid_connection#port AppServiceHybridConnection#port}
    */
    readonly port: number;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/app_service_hybrid_connection#relay_id AppServiceHybridConnection#relay_id}
    */
    readonly relayId: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/app_service_hybrid_connection#resource_group_name AppServiceHybridConnection#resource_group_name}
    */
    readonly resourceGroupName: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/app_service_hybrid_connection#send_key_name AppServiceHybridConnection#send_key_name}
    */
    readonly sendKeyName?: string;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/app_service_hybrid_connection#timeouts AppServiceHybridConnection#timeouts}
    */
    readonly timeouts?: AppServiceHybridConnectionTimeouts;
}
export interface AppServiceHybridConnectionTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/app_service_hybrid_connection#create AppServiceHybridConnection#create}
    */
    readonly create?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/app_service_hybrid_connection#delete AppServiceHybridConnection#delete}
    */
    readonly delete?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/app_service_hybrid_connection#read AppServiceHybridConnection#read}
    */
    readonly read?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/app_service_hybrid_connection#update AppServiceHybridConnection#update}
    */
    readonly update?: string;
}
export declare function appServiceHybridConnectionTimeoutsToTerraform(struct?: AppServiceHybridConnectionTimeoutsOutputReference | AppServiceHybridConnectionTimeouts | cdktf.IResolvable): any;
export declare class AppServiceHybridConnectionTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param isSingleItem True if this is a block, false if it's a list
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, isSingleItem: boolean);
    get internalValue(): AppServiceHybridConnectionTimeouts | undefined;
    set internalValue(value: AppServiceHybridConnectionTimeouts | undefined);
    private _create?;
    get create(): string;
    set create(value: string);
    resetCreate(): void;
    get createInput(): string | undefined;
    private _delete?;
    get delete(): string;
    set delete(value: string);
    resetDelete(): void;
    get deleteInput(): string | undefined;
    private _read?;
    get read(): string;
    set read(value: string);
    resetRead(): void;
    get readInput(): string | undefined;
    private _update?;
    get update(): string;
    set update(value: string);
    resetUpdate(): void;
    get updateInput(): string | undefined;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/azurerm/r/app_service_hybrid_connection azurerm_app_service_hybrid_connection}
*/
export declare class AppServiceHybridConnection extends cdktf.TerraformResource {
    static readonly tfResourceType: string;
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/azurerm/r/app_service_hybrid_connection azurerm_app_service_hybrid_connection} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options AppServiceHybridConnectionConfig
    */
    constructor(scope: Construct, id: string, config: AppServiceHybridConnectionConfig);
    private _appServiceName?;
    get appServiceName(): string;
    set appServiceName(value: string);
    get appServiceNameInput(): string | undefined;
    private _hostname?;
    get hostname(): string;
    set hostname(value: string);
    get hostnameInput(): string | undefined;
    get id(): string;
    get namespaceName(): string;
    private _port?;
    get port(): number;
    set port(value: number);
    get portInput(): number | undefined;
    private _relayId?;
    get relayId(): string;
    set relayId(value: string);
    get relayIdInput(): string | undefined;
    get relayName(): string;
    private _resourceGroupName?;
    get resourceGroupName(): string;
    set resourceGroupName(value: string);
    get resourceGroupNameInput(): string | undefined;
    private _sendKeyName?;
    get sendKeyName(): string;
    set sendKeyName(value: string);
    resetSendKeyName(): void;
    get sendKeyNameInput(): string | undefined;
    get sendKeyValue(): string;
    get serviceBusNamespace(): string;
    get serviceBusSuffix(): string;
    private _timeouts;
    get timeouts(): AppServiceHybridConnectionTimeoutsOutputReference;
    putTimeouts(value: AppServiceHybridConnectionTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): AppServiceHybridConnectionTimeouts | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
