import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface RelayHybridConnectionConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/relay_hybrid_connection#name RelayHybridConnection#name}
    */
    readonly name: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/relay_hybrid_connection#relay_namespace_name RelayHybridConnection#relay_namespace_name}
    */
    readonly relayNamespaceName: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/relay_hybrid_connection#requires_client_authorization RelayHybridConnection#requires_client_authorization}
    */
    readonly requiresClientAuthorization?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/relay_hybrid_connection#resource_group_name RelayHybridConnection#resource_group_name}
    */
    readonly resourceGroupName: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/relay_hybrid_connection#user_metadata RelayHybridConnection#user_metadata}
    */
    readonly userMetadata?: string;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/relay_hybrid_connection#timeouts RelayHybridConnection#timeouts}
    */
    readonly timeouts?: RelayHybridConnectionTimeouts;
}
export interface RelayHybridConnectionTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/relay_hybrid_connection#create RelayHybridConnection#create}
    */
    readonly create?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/relay_hybrid_connection#delete RelayHybridConnection#delete}
    */
    readonly delete?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/relay_hybrid_connection#read RelayHybridConnection#read}
    */
    readonly read?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/relay_hybrid_connection#update RelayHybridConnection#update}
    */
    readonly update?: string;
}
export declare function relayHybridConnectionTimeoutsToTerraform(struct?: RelayHybridConnectionTimeoutsOutputReference | RelayHybridConnectionTimeouts | cdktf.IResolvable): any;
export declare class RelayHybridConnectionTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param isSingleItem True if this is a block, false if it's a list
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, isSingleItem: boolean);
    get internalValue(): RelayHybridConnectionTimeouts | undefined;
    set internalValue(value: RelayHybridConnectionTimeouts | undefined);
    private _create?;
    get create(): string;
    set create(value: string);
    resetCreate(): void;
    get createInput(): string | undefined;
    private _delete?;
    get delete(): string;
    set delete(value: string);
    resetDelete(): void;
    get deleteInput(): string | undefined;
    private _read?;
    get read(): string;
    set read(value: string);
    resetRead(): void;
    get readInput(): string | undefined;
    private _update?;
    get update(): string;
    set update(value: string);
    resetUpdate(): void;
    get updateInput(): string | undefined;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/azurerm/r/relay_hybrid_connection azurerm_relay_hybrid_connection}
*/
export declare class RelayHybridConnection extends cdktf.TerraformResource {
    static readonly tfResourceType: string;
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/azurerm/r/relay_hybrid_connection azurerm_relay_hybrid_connection} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options RelayHybridConnectionConfig
    */
    constructor(scope: Construct, id: string, config: RelayHybridConnectionConfig);
    get id(): string;
    private _name?;
    get name(): string;
    set name(value: string);
    get nameInput(): string | undefined;
    private _relayNamespaceName?;
    get relayNamespaceName(): string;
    set relayNamespaceName(value: string);
    get relayNamespaceNameInput(): string | undefined;
    private _requiresClientAuthorization?;
    get requiresClientAuthorization(): boolean | cdktf.IResolvable;
    set requiresClientAuthorization(value: boolean | cdktf.IResolvable);
    resetRequiresClientAuthorization(): void;
    get requiresClientAuthorizationInput(): boolean | cdktf.IResolvable | undefined;
    private _resourceGroupName?;
    get resourceGroupName(): string;
    set resourceGroupName(value: string);
    get resourceGroupNameInput(): string | undefined;
    private _userMetadata?;
    get userMetadata(): string;
    set userMetadata(value: string);
    resetUserMetadata(): void;
    get userMetadataInput(): string | undefined;
    private _timeouts;
    get timeouts(): RelayHybridConnectionTimeoutsOutputReference;
    putTimeouts(value: RelayHybridConnectionTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): RelayHybridConnectionTimeouts | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
