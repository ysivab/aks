import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface MssqlServerVulnerabilityAssessmentConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/mssql_server_vulnerability_assessment#server_security_alert_policy_id MssqlServerVulnerabilityAssessment#server_security_alert_policy_id}
    */
    readonly serverSecurityAlertPolicyId: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/mssql_server_vulnerability_assessment#storage_account_access_key MssqlServerVulnerabilityAssessment#storage_account_access_key}
    */
    readonly storageAccountAccessKey?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/mssql_server_vulnerability_assessment#storage_container_path MssqlServerVulnerabilityAssessment#storage_container_path}
    */
    readonly storageContainerPath: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/mssql_server_vulnerability_assessment#storage_container_sas_key MssqlServerVulnerabilityAssessment#storage_container_sas_key}
    */
    readonly storageContainerSasKey?: string;
    /**
    * recurring_scans block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/mssql_server_vulnerability_assessment#recurring_scans MssqlServerVulnerabilityAssessment#recurring_scans}
    */
    readonly recurringScans?: MssqlServerVulnerabilityAssessmentRecurringScans;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/mssql_server_vulnerability_assessment#timeouts MssqlServerVulnerabilityAssessment#timeouts}
    */
    readonly timeouts?: MssqlServerVulnerabilityAssessmentTimeouts;
}
export interface MssqlServerVulnerabilityAssessmentRecurringScans {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/mssql_server_vulnerability_assessment#email_subscription_admins MssqlServerVulnerabilityAssessment#email_subscription_admins}
    */
    readonly emailSubscriptionAdmins?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/mssql_server_vulnerability_assessment#emails MssqlServerVulnerabilityAssessment#emails}
    */
    readonly emails?: string[];
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/mssql_server_vulnerability_assessment#enabled MssqlServerVulnerabilityAssessment#enabled}
    */
    readonly enabled?: boolean | cdktf.IResolvable;
}
export declare function mssqlServerVulnerabilityAssessmentRecurringScansToTerraform(struct?: MssqlServerVulnerabilityAssessmentRecurringScansOutputReference | MssqlServerVulnerabilityAssessmentRecurringScans): any;
export declare class MssqlServerVulnerabilityAssessmentRecurringScansOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param isSingleItem True if this is a block, false if it's a list
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, isSingleItem: boolean);
    get internalValue(): MssqlServerVulnerabilityAssessmentRecurringScans | undefined;
    set internalValue(value: MssqlServerVulnerabilityAssessmentRecurringScans | undefined);
    private _emailSubscriptionAdmins?;
    get emailSubscriptionAdmins(): boolean | cdktf.IResolvable;
    set emailSubscriptionAdmins(value: boolean | cdktf.IResolvable);
    resetEmailSubscriptionAdmins(): void;
    get emailSubscriptionAdminsInput(): boolean | cdktf.IResolvable | undefined;
    private _emails?;
    get emails(): string[];
    set emails(value: string[]);
    resetEmails(): void;
    get emailsInput(): string[] | undefined;
    private _enabled?;
    get enabled(): boolean | cdktf.IResolvable;
    set enabled(value: boolean | cdktf.IResolvable);
    resetEnabled(): void;
    get enabledInput(): boolean | cdktf.IResolvable | undefined;
}
export interface MssqlServerVulnerabilityAssessmentTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/mssql_server_vulnerability_assessment#create MssqlServerVulnerabilityAssessment#create}
    */
    readonly create?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/mssql_server_vulnerability_assessment#delete MssqlServerVulnerabilityAssessment#delete}
    */
    readonly delete?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/mssql_server_vulnerability_assessment#read MssqlServerVulnerabilityAssessment#read}
    */
    readonly read?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/azurerm/r/mssql_server_vulnerability_assessment#update MssqlServerVulnerabilityAssessment#update}
    */
    readonly update?: string;
}
export declare function mssqlServerVulnerabilityAssessmentTimeoutsToTerraform(struct?: MssqlServerVulnerabilityAssessmentTimeoutsOutputReference | MssqlServerVulnerabilityAssessmentTimeouts | cdktf.IResolvable): any;
export declare class MssqlServerVulnerabilityAssessmentTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param isSingleItem True if this is a block, false if it's a list
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, isSingleItem: boolean);
    get internalValue(): MssqlServerVulnerabilityAssessmentTimeouts | undefined;
    set internalValue(value: MssqlServerVulnerabilityAssessmentTimeouts | undefined);
    private _create?;
    get create(): string;
    set create(value: string);
    resetCreate(): void;
    get createInput(): string | undefined;
    private _delete?;
    get delete(): string;
    set delete(value: string);
    resetDelete(): void;
    get deleteInput(): string | undefined;
    private _read?;
    get read(): string;
    set read(value: string);
    resetRead(): void;
    get readInput(): string | undefined;
    private _update?;
    get update(): string;
    set update(value: string);
    resetUpdate(): void;
    get updateInput(): string | undefined;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/azurerm/r/mssql_server_vulnerability_assessment azurerm_mssql_server_vulnerability_assessment}
*/
export declare class MssqlServerVulnerabilityAssessment extends cdktf.TerraformResource {
    static readonly tfResourceType: string;
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/azurerm/r/mssql_server_vulnerability_assessment azurerm_mssql_server_vulnerability_assessment} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options MssqlServerVulnerabilityAssessmentConfig
    */
    constructor(scope: Construct, id: string, config: MssqlServerVulnerabilityAssessmentConfig);
    get id(): string;
    private _serverSecurityAlertPolicyId?;
    get serverSecurityAlertPolicyId(): string;
    set serverSecurityAlertPolicyId(value: string);
    get serverSecurityAlertPolicyIdInput(): string | undefined;
    private _storageAccountAccessKey?;
    get storageAccountAccessKey(): string;
    set storageAccountAccessKey(value: string);
    resetStorageAccountAccessKey(): void;
    get storageAccountAccessKeyInput(): string | undefined;
    private _storageContainerPath?;
    get storageContainerPath(): string;
    set storageContainerPath(value: string);
    get storageContainerPathInput(): string | undefined;
    private _storageContainerSasKey?;
    get storageContainerSasKey(): string;
    set storageContainerSasKey(value: string);
    resetStorageContainerSasKey(): void;
    get storageContainerSasKeyInput(): string | undefined;
    private _recurringScans;
    get recurringScans(): MssqlServerVulnerabilityAssessmentRecurringScansOutputReference;
    putRecurringScans(value: MssqlServerVulnerabilityAssessmentRecurringScans): void;
    resetRecurringScans(): void;
    get recurringScansInput(): MssqlServerVulnerabilityAssessmentRecurringScans | undefined;
    private _timeouts;
    get timeouts(): MssqlServerVulnerabilityAssessmentTimeoutsOutputReference;
    putTimeouts(value: MssqlServerVulnerabilityAssessmentTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): MssqlServerVulnerabilityAssessmentTimeouts | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
