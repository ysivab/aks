import { Construct } from "constructs";
import { TerraformModuleOptions, TerraformModule } from "./terraform-module";
import { IResolvable } from "./tokens";
/**
 * @experimental
 */
export interface TerraformHclModuleOptions extends TerraformModuleOptions {
    /**
     * @experimental
     */
    readonly variables?: {
        [key: string]: any;
    };
}
/**
 * @experimental
 */
export declare class TerraformHclModule extends TerraformModule {
    private _variables?;
    /**
     * @experimental
     */
    constructor(scope: Construct, id: string, options: TerraformHclModuleOptions);
    /**
     * @experimental
     */
    get variables(): {
        [key: string]: any;
    } | undefined;
    /**
     * @experimental
     */
    set(variable: string, value: any): void;
    /**
     * @experimental
     */
    get(output: string): any;
    /**
     * @experimental
     */
    getNumber(output: string): number;
    /**
     * @experimental
     */
    getBoolean(output: string): IResolvable;
    /**
     * @experimental
     */
    getList(output: string): string[];
    /**
     * @experimental
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
