import { Construct } from "constructs";
import { TerraformBackend } from "../terraform-backend";
import { TerraformRemoteState, DataTerraformRemoteStateConfig } from "../terraform-remote-state";
/**
 * @experimental
 */
export declare class ConsulBackend extends TerraformBackend {
    private readonly props;
    /**
     * @experimental
     */
    constructor(scope: Construct, props: ConsulBackendProps);
    /**
     * @experimental
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
    /**
     * (experimental) Creates a TerraformRemoteState resource that accesses this backend.
     *
     * @experimental
     */
    getRemoteStateDataSource(scope: Construct, name: string, _fromStack: string): TerraformRemoteState;
}
/**
 * @experimental
 */
export declare class DataTerraformRemoteStateConsul extends TerraformRemoteState {
    /**
     * @experimental
     */
    constructor(scope: Construct, id: string, config: DataTerraformRemoteStateConsulConfig);
}
/**
 * @experimental
 */
export interface ConsulBackendProps {
    /**
     * @experimental
     */
    readonly path: string;
    /**
     * @experimental
     */
    readonly accessToken: string;
    /**
     * @experimental
     */
    readonly address?: string;
    /**
     * @experimental
     */
    readonly scheme?: string;
    /**
     * @experimental
     */
    readonly datacenter?: string;
    /**
     * @experimental
     */
    readonly httpAuth?: string;
    /**
     * @experimental
     */
    readonly gzip?: boolean;
    /**
     * @experimental
     */
    readonly lock?: boolean;
    /**
     * @experimental
     */
    readonly caFile?: string;
    /**
     * @experimental
     */
    readonly certFile?: string;
    /**
     * @experimental
     */
    readonly keyFile?: string;
}
/**
 * @experimental
 */
export interface DataTerraformRemoteStateConsulConfig extends DataTerraformRemoteStateConfig, ConsulBackendProps {
}
