import { Construct } from "constructs";
import { TerraformBackend } from "../terraform-backend";
import { TerraformRemoteState, DataTerraformRemoteStateConfig } from "../terraform-remote-state";
/**
 * @experimental
 */
export declare class EtcdV3Backend extends TerraformBackend {
    private readonly props;
    /**
     * @experimental
     */
    constructor(scope: Construct, props: EtcdV3BackendProps);
    /**
     * @experimental
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
    /**
     * (experimental) Creates a TerraformRemoteState resource that accesses this backend.
     *
     * @experimental
     */
    getRemoteStateDataSource(scope: Construct, name: string, _fromStack: string): TerraformRemoteState;
}
/**
 * @experimental
 */
export declare class DataTerraformRemoteStateEtcdV3 extends TerraformRemoteState {
    /**
     * @experimental
     */
    constructor(scope: Construct, id: string, config: DataTerraformRemoteStateEtcdV3Config);
}
/**
 * @experimental
 */
export interface EtcdV3BackendProps {
    /**
     * @experimental
     */
    readonly endpoints: string[];
    /**
     * @experimental
     */
    readonly username?: string;
    /**
     * @experimental
     */
    readonly password?: string;
    /**
     * @experimental
     */
    readonly prefix?: string;
    /**
     * @experimental
     */
    readonly lock?: boolean;
    /**
     * @experimental
     */
    readonly cacertPath?: string;
    /**
     * @experimental
     */
    readonly certPath?: string;
    /**
     * @experimental
     */
    readonly keyPath?: string;
}
/**
 * @experimental
 */
export interface DataTerraformRemoteStateEtcdV3Config extends DataTerraformRemoteStateConfig, EtcdV3BackendProps {
}
