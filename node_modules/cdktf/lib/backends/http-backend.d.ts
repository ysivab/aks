import { Construct } from "constructs";
import { TerraformBackend } from "../terraform-backend";
import { TerraformRemoteState, DataTerraformRemoteStateConfig } from "../terraform-remote-state";
/**
 * @experimental
 */
export declare class HttpBackend extends TerraformBackend {
    private readonly props;
    /**
     * @experimental
     */
    constructor(scope: Construct, props: HttpBackendProps);
    /**
     * @experimental
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
    /**
     * (experimental) Creates a TerraformRemoteState resource that accesses this backend.
     *
     * @experimental
     */
    getRemoteStateDataSource(scope: Construct, name: string, _fromStack: string): TerraformRemoteState;
}
/**
 * @experimental
 */
export declare class DataTerraformRemoteStateHttp extends TerraformRemoteState {
    /**
     * @experimental
     */
    constructor(scope: Construct, id: string, config: DataTerraformRemoteStateHttpConfig);
}
/**
 * @experimental
 */
export interface HttpBackendProps {
    /**
     * @experimental
     */
    readonly address: string;
    /**
     * @experimental
     */
    readonly updateMethod?: string;
    /**
     * @experimental
     */
    readonly lockAddress?: string;
    /**
     * @experimental
     */
    readonly lockMethod?: string;
    /**
     * @experimental
     */
    readonly unlockAddress?: string;
    /**
     * @experimental
     */
    readonly unlockMethod?: string;
    /**
     * @experimental
     */
    readonly username?: string;
    /**
     * @experimental
     */
    readonly password?: string;
    /**
     * @experimental
     */
    readonly skipCertVerification?: boolean;
    /**
     * @experimental
     */
    readonly retryMax?: number;
    /**
     * @experimental
     */
    readonly retryWaitMin?: number;
    /**
     * @experimental
     */
    readonly retryWaitMax?: number;
}
/**
 * @experimental
 */
export interface DataTerraformRemoteStateHttpConfig extends DataTerraformRemoteStateConfig, HttpBackendProps {
}
