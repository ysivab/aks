import { Construct } from "constructs";
import { TerraformStack } from "./terraform-stack";
/**
 * @experimental
 */
export interface TerraformElementMetadata {
    /**
     * @experimental
     */
    readonly path: string;
    /**
     * @experimental
     */
    readonly uniqueId: string;
    /**
     * @experimental
     */
    readonly stackTrace: string[];
}
/**
 * @experimental
 */
export declare class TerraformElement extends Construct {
    /**
     * @experimental
     */
    readonly cdktfStack: TerraformStack;
    /**
     * @experimental
     */
    protected readonly rawOverrides: any;
    /**
     * An explicit logical ID provided by `overrideLogicalId`.
     */
    private _logicalIdOverride?;
    /**
     * @experimental
     */
    constructor(scope: Construct, id: string);
    /**
     * @experimental
     */
    toTerraform(): any;
    /**
     * @experimental
     */
    toMetadata(): any;
    /**
     * @experimental
     */
    get friendlyUniqueId(): string;
    /**
     * (experimental) Overrides the auto-generated logical ID with a specific ID.
     *
     * @param newLogicalId The new logical ID to use for this stack element.
     * @experimental
     */
    overrideLogicalId(newLogicalId: string): void;
    /**
     * (experimental) Resets a previously passed logical Id to use the auto-generated logical id again.
     *
     * @experimental
     */
    resetOverrideLogicalId(): void;
    /**
     * @experimental
     */
    addOverride(path: string, value: any): void;
    /**
     * @experimental
     */
    protected get constructNodeMetadata(): {
        [key: string]: any;
    };
}
