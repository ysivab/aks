import { Construct } from "constructs";
import { TerraformElement } from "./terraform-element";
import { TerraformProviderGeneratorMetadata } from "./terraform-resource";
/**
 * @experimental
 */
export interface TerraformProviderConfig {
    /**
     * @experimental
     */
    readonly terraformResourceType: string;
    /**
     * @experimental
     */
    readonly terraformGeneratorMetadata?: TerraformProviderGeneratorMetadata;
    /**
     * @experimental
     */
    readonly terraformProviderSource?: string;
}
/**
 * @experimental
 */
export declare abstract class TerraformProvider extends TerraformElement {
    /**
     * @experimental
     */
    readonly terraformResourceType: string;
    /**
     * @experimental
     */
    readonly terraformGeneratorMetadata?: TerraformProviderGeneratorMetadata;
    /**
     * @experimental
     */
    readonly terraformProviderSource?: string;
    /**
     * @experimental
     */
    constructor(scope: Construct, id: string, config: TerraformProviderConfig);
    /**
     * @experimental
     */
    get alias(): string | undefined;
    /**
     * @experimental
     */
    set alias(_value: string | undefined);
    /**
     * @experimental
     */
    get fqn(): string;
    /**
     * @experimental
     */
    get metaAttributes(): {
        [name: string]: any;
    };
    /**
     * @experimental
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
    /**
     * (experimental) Adds this resource to the terraform JSON output.
     *
     * @experimental
     */
    toTerraform(): any;
    /**
     * @experimental
     */
    toMetadata(): any;
}
